diff --git a/generic-pc/dmx.cpp b/generic-pc/dmx.cpp
index fe1d161..409c086 100644
--- a/generic-pc/dmx.cpp
+++ b/generic-pc/dmx.cpp
@@ -70,12 +70,15 @@ static const char *DMX_T[] = {
 };
 
 /* map the device numbers. for now only demux0 is used */
-static const char *devname[] = {
+#define NUM_DEMUXDEV 1
+static const char *devname[NUM_DEMUXDEV] = {
 	"/dev/dvb/adapter0/demux0",
-	"/dev/dvb/adapter0/demux0",
-	"/dev/dvb/adapter0/demux0"
 };
 
+#define NUM_DEMUX 1
+static int dmx_source[NUM_DEMUX] = { 0 };
+static bool init[NUM_DEMUXDEV] = { false };
+
 /* uuuugly */
 static int dmx_tp_count = 0;
 #define MAX_TS_COUNT 8
@@ -494,12 +497,28 @@ int cDemux::getUnit(void)
 
 bool cDemux::SetSource(int unit, int source)
 {
-	lt_info_c("%s(%d, %d): not implemented yet\n", __func__, unit, source);
+	//lt_info_c("%s(%d, %d): not implemented yet\n", __func__, unit, source);
+	//return true;
+	if (unit >= NUM_DEMUX || unit < 0) {
+		lt_info_c("%s: unit (%d) out of range, NUM_DEMUX %d\n", __func__, unit, NUM_DEMUX);
+		return false;
+	}
+	lt_info_c("%s(%d, %d) => %d to %d\n", __func__, unit, source, dmx_source[unit], source);
+	if (source < 0 || source >= NUM_DEMUXDEV)
+		lt_info_c("%s(%d, %d) ERROR: source %d out of range!\n", __func__, unit, source, source);
+	else
+		dmx_source[unit] = source;
 	return true;
 }
 
 int cDemux::GetSource(int unit)
 {
-	lt_info_c("%s(%d): not implemented yet\n", __func__, unit);
-	return 0;
+	//lt_info_c("%s(%d): not implemented yet\n", __func__, unit);
+	//return 0;
+	if (unit >= NUM_DEMUX || unit < 0) {
+		lt_info_c("%s: unit (%d) out of range, NUM_DEMUX %d\n", __func__, unit, NUM_DEMUX);
+		return -1;
+	}
+	lt_info_c("%s(%d) => %d\n", __func__, unit, dmx_source[unit]);
+	return dmx_source[unit];
 }
