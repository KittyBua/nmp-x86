diff -NEbur '--exclude-from=/home/tango/nmp_4x86/diff-exclude' libstb-hal.org/generic-pc/audio.cpp libstb-hal/generic-pc/audio.cpp
--- libstb-hal.org/generic-pc/audio.cpp	2017-03-14 13:42:22.564360799 +0100
+++ libstb-hal/generic-pc/audio.cpp	2017-03-14 22:24:06.586267636 +0100
@@ -374,31 +374,28 @@
 		lt_info("%s: nb_streams: %d, should be 1!\n", __func__, avfc->nb_streams);
 		goto out;
 	}
-	p = avfc->streams[0]->codecpar;
-	if (p->codec_type != AVMEDIA_TYPE_AUDIO)
-		lt_info("%s: stream 0 no audio codec? 0x%x\n", __func__, p->codec_type);
+	if (avfc->streams[0]->codec->codec_type != AVMEDIA_TYPE_AUDIO)
+		lt_info("%s: stream 0 no audio codec? 0x%x\n", __func__, avfc->streams[0]->codec->codec_type);
 
-	codec = avcodec_find_decoder(p->codec_id);
+	c = avfc->streams[0]->codec;
+	codec = avcodec_find_decoder(c->codec_id);
 	if (!codec) {
-		lt_info("%s: Codec for %s not found\n", __func__, avcodec_get_name(p->codec_id));
+		lt_info("%s: Codec for %s not found\n", __func__, avcodec_get_name(c->codec_id));
 		goto out;
 	}
-	if (c)
-		av_free(c);
-	c = avcodec_alloc_context3(codec);
 	if (avcodec_open2(c, codec, NULL) < 0) {
 		lt_info("%s: avcodec_open2() failed\n", __func__);
 		goto out;
 	}
 	frame = av_frame_alloc();
 	if (!frame) {
-		lt_info("%s: av_frame_alloc failed\n", __func__);
+		lt_info("%s: avcodec_alloc_frame failed\n", __func__);
 		goto out2;
 	}
 	/* output sample rate, channels, layout could be set here if necessary */
-	o_ch = p->channels;		/* 2 */
-	o_sr = p->sample_rate;		/* 48000 */
-	o_layout = p->channel_layout;	/* AV_CH_LAYOUT_STEREO */
+	o_ch = c->channels;		/* 2 */
+	o_sr = c->sample_rate;		/* 48000 */
+	o_layout = c->channel_layout;	/* AV_CH_LAYOUT_STEREO */
 	if (sformat.channels != o_ch || sformat.rate != o_sr ||
 	    sformat.byte_format != AO_FMT_NATIVE || sformat.bits != 16 || adevice == NULL)
 	{
@@ -425,10 +422,10 @@
 #endif
 	av_get_sample_fmt_string(tmp, sizeof(tmp), c->sample_fmt);
 	lt_info("decoding %s, sample_fmt %d (%s) sample_rate %d channels %d\n",
-		 avcodec_get_name(p->codec_id), c->sample_fmt, tmp, p->sample_rate, p->channels);
+		 avcodec_get_name(c->codec_id), c->sample_fmt, tmp, c->sample_rate, c->channels);
 	swr = swr_alloc_set_opts(swr,
 				 o_layout, AV_SAMPLE_FMT_S16, o_sr,			/* output */
-				 p->channel_layout, c->sample_fmt, p->sample_rate,	/* input */
+				 c->channel_layout, c->sample_fmt, c->sample_rate,	/* input */
 				 0, NULL);
 	if (! swr) {
 		lt_info("could not alloc resample context\n");
@@ -442,15 +439,15 @@
 		avcodec_decode_audio4(c, frame, &gotframe, &avpkt);
 		if (gotframe && thread_started) {
 			int out_linesize;
-			obuf_sz = av_rescale_rnd(swr_get_delay(swr, p->sample_rate) +
-						 frame->nb_samples, o_sr, p->sample_rate, AV_ROUND_UP);
+			obuf_sz = av_rescale_rnd(swr_get_delay(swr, c->sample_rate) +
+						 frame->nb_samples, o_sr, c->sample_rate, AV_ROUND_UP);
 			if (obuf_sz > obuf_sz_max) {
 				lt_info("obuf_sz: %d old: %d\n", obuf_sz, obuf_sz_max);
 				av_free(obuf);
 				if (av_samples_alloc(&obuf, &out_linesize, o_ch,
 							frame->nb_samples, AV_SAMPLE_FMT_S16, 1) < 0) {
 					lt_info("av_samples_alloc failed\n");
-					av_packet_unref(&avpkt);
+					av_free_packet(&avpkt);
 					break; /* while (thread_started) */
 				}
 				obuf_sz_max = obuf_sz;
@@ -463,7 +460,7 @@
 								  obuf_sz, AV_SAMPLE_FMT_S16, 1);
 			ao_play(adevice, (char *)obuf, o_buf_sz);
 		}
-		av_packet_unref(&avpkt);
+		av_free_packet(&avpkt);
 	}
 	// ao_close(adevice); /* can take long :-( */
 	av_free(obuf);
@@ -472,7 +469,6 @@
 	av_frame_free(&frame);
  out2:
 	avcodec_close(c);
-	av_free(c);
 	c = NULL;
  out:
 	avformat_close_input(&avfc);
diff -NEbur '--exclude-from=/home/tango/nmp_4x86/diff-exclude' libstb-hal.org/generic-pc/audio_priv.h libstb-hal/generic-pc/audio_priv.h
--- libstb-hal.org/generic-pc/audio_priv.h	2017-03-14 13:42:22.564360799 +0100
+++ libstb-hal/generic-pc/audio_priv.h	2017-03-14 22:21:20.675479386 +0100
@@ -49,6 +49,5 @@
 	uint8_t *dmxbuf;
 	int bufpos;
 	AVCodecContext *c;
-	AVCodecParameters *p;
 };
 
diff -NEbur '--exclude-from=/home/tango/nmp_4x86/diff-exclude' libstb-hal.org/generic-pc/video.cpp libstb-hal/generic-pc/video.cpp
--- libstb-hal.org/generic-pc/video.cpp	2017-03-14 13:42:22.564360799 +0100
+++ libstb-hal/generic-pc/video.cpp	2017-03-14 22:21:20.675479386 +0100
@@ -287,7 +287,6 @@
 	int len;
 	AVFormatContext *avfc = NULL;
 	AVCodecContext *c = NULL;
-	AVCodecParameters *p = NULL;
 	AVCodec *codec;
 	AVFrame *frame, *rgbframe;
 	AVPacket avpkt;
@@ -302,18 +301,17 @@
 		goto out_close;
 	}
 	for (i = 0; i < avfc->nb_streams; i++) {
-		if (avfc->streams[i]->codecpar->codec_type == AVMEDIA_TYPE_VIDEO) {
+		if (avfc->streams[i]->codec->codec_type == AVMEDIA_TYPE_VIDEO) {
 			stream_id = i;
 			break;
 		}
 	}
 	if (stream_id < 0)
 		goto out_close;
-	p = avfc->streams[stream_id]->codecpar;
-	codec = avcodec_find_decoder(p->codec_id);
-	c = avcodec_alloc_context3(codec);
-	if (avcodec_open2(c, codec, NULL) < 0) {
-		lt_info("%s: Could not find/open the codec, id 0x%x\n", __func__, p->codec_id);
+	c = avfc->streams[stream_id]->codec;
+	codec = avcodec_find_decoder(c->codec_id);
+	if (!avcodec_open2(c, codec, NULL) < 0) {
+		lt_info("%s: Could not find/open the codec, id 0x%x\n", __func__, c->codec_id);
 		goto out_close;
 	}
 	frame = av_frame_alloc();
@@ -481,7 +479,6 @@
 {
 	lt_info("====================== start decoder thread ================================\n");
 	AVCodec *codec;
-	AVCodecParameters *p = NULL;
 	AVCodecContext *c= NULL;
 	AVFormatContext *avfc = NULL;
 	AVInputFormat *inp;
@@ -527,16 +524,15 @@
 			goto out;
 	}
 
-	p = avfc->streams[0]->codecpar;
-	if (p->codec_type != AVMEDIA_TYPE_VIDEO)
-		lt_info("%s: no video codec? 0x%x\n", __func__, p->codec_type);
+	if (avfc->streams[0]->codec->codec_type != AVMEDIA_TYPE_VIDEO)
+		lt_info("%s: no video codec? 0x%x\n", __func__, avfc->streams[0]->codec->codec_type);
 
-	codec = avcodec_find_decoder(p->codec_id);
+	c = avfc->streams[0]->codec;
+	codec = avcodec_find_decoder(c->codec_id);
 	if (!codec) {
-		lt_info("%s: Codec for %s not found\n", __func__, avcodec_get_name(p->codec_id));
+		lt_info("%s: Codec for %s not found\n", __func__, avcodec_get_name(c->codec_id));
 		goto out;
 	}
-	c = avcodec_alloc_context3(codec);
 	if (avcodec_open2(c, codec, NULL) < 0) {
 		lt_info("%s: Could not open codec\n", __func__);
 		goto out;
